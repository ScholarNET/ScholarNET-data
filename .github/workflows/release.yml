name: Create Release

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master
      - development
      - release-workflow

jobs:
  build_ant_package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml
    - uses: actions/upload-artifact@master
      with:
        name: build-artifact
        path: build/
  update_release_draft:
    runs-on: ubuntu-latest
    needs: build_ant_package
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download
        uses: actions/download-artifact@master
        with: 
          name: build-artifact
          path: build
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build/${{ steps.create_release.outputs.tag_name }}.xar # TO DO: Grab this as a variable
          asset_name: ${{ steps.create_release.outputs.upload_url }}.xar # TO DO: Grab this as a variable
          asset_content_type: application/x-xar
