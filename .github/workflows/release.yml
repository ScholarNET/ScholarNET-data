name: Create Release, Build and Push Docker Image

on:
   push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - master
      - development
      - release-workflow

jobs:
  build_ant_package:
    runs-on: ubuntu-latest
    name: Build Ant Package

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Ant
      run: ant -noinput -buildfile build.xml
    - uses: actions/upload-artifact@master
      with:
        name: build-artifact
        path: build/
  update_release_draft:
    runs-on: ubuntu-latest
    needs: build_ant_package
    name: Create/Update Release based on Pull Request
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Version Variables
        id: set-version-variables
        uses: actions/github-script@v3        
        with:
          script: |            
            var str = "${{ steps.create_release.outputs.tag_name }}";
            core.exportVariable('RELEASE_TAG', str);
            core.exportVariable('RELEASE_VERSION', str.replace("v", ""));
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download
        uses: actions/download-artifact@master
        with: 
          name: build-artifact
          path: build
      - name: Upload Release Asset # Will fail if build.xml version info doesn't match Release Drafter's version incrementer. Will also fail if a .xar with the same name is already attached to the same draft release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/usaybia-data-${{env.RELEASE_VERSION}}.xar
          asset_name: usaybia-data-${{env.RELEASE_VERSION}}.xar
          asset_content_type: application/x-xar
      - name: Report Failure
        if: ${{ failure() }}
        uses: actions/github-script@v3        
        with:
          script: console.log("Failed: Check whether build.xml matches the Release Drafter version and whether a .xar asset with the same name already exists on the draft release.");
            # console.log(${{env.RELEASE_VERSION}});
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: [update_release_draft]
    name: Docker Build, Tag, Push

    steps:
    - name: Download
      uses: actions/download-artifact@master
      with: 
        name: build-artifact
        path: build
    #- name: Build container image
    #  uses: docker/build-push-action@v1
    #  with:
    #    username: ${{github.actor}}
    #    password: ${{secrets.GITHUB_TOKEN}}
    #    registry: docker.pkg.github.com
    #    repository: usaybia/usaybia-data/usaybia-data
    #    tags: ${{env.RELEASE_TAG}} # Not sure the correct format for these tags
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        pull: true
        push: true
        # build-args: |
        #  arg1=value1
        #  arg2=value2
        # cache-from: type=registry,ref=myorg/myrepository:latest
        # cache-to: type=inline
        tags: usaybia/usaybia-data:${{env.RELEASE_TAG}}